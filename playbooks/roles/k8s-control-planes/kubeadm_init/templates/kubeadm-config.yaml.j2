---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v{{ Kubernetes.Version }}
controlPlaneEndpoint: {{ LoadBalancer.Keepalived.VirtualLocalIPAddress }}:{{ LoadBalancer.BindPort }}
apiServer:
  extraArgs:
    allow-privileged: "true"
    authorization-mode: Node,RBAC
    enable-admission-plugins: NamespaceLifecycle,LimitRanger,ServiceAccount,TaintNodesByCondition,PodSecurity,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,DefaultIngressClass,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
    feature-gates: NodeOutOfServiceVolumeDetach=true,ReadWriteOncePod=true
  certSANs:
  - "{{ LoadBalancer.Hostname }}"
{% for control_plane in groups['k8s-control-planes'] %}
  - "{{ control_plane }}"
  - "{{ hostvars[control_plane]['ansible_host'] }}"
{% endfor %}
{% for loadbalancer in groups['k8s-loadbalancers'] %}
  - "{{ loadbalancer }}"
  - "{{ hostvars[loadbalancer]['ansible_host'] }}"
{% endfor %}
  - "{{ LoadBalancer.Keepalived.VirtualLocalIPAddress }}"
  timeoutForControlPlane: 4m0s
clusterName: {{ Kubernetes.ClusterName }}
imageRepository: k8s.gcr.io
certificatesDir: /etc/kubernetes/pki
controllerManager:
  extraArgs:
    node-monitor-period: 3s
    node-monitor-grace-period: 15s
    pod-eviction-timeout: 15s
    feature-gates: NodeOutOfServiceVolumeDetach=true
scheduler:
  extraArgs:
    feature-gates: NodeOutOfServiceVolumeDetach=true,ReadWriteOncePod=true
dns: {}
etcd:
  local:
    dataDir: /var/lib/etcd
networking:
  dnsDomain: cluster.local
  podSubnet: {{ Kubernetes.PodNetworkCIDR }}
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
featureGates:
  ReadWriteOncePod: true
  NodeOutOfServiceVolumeDetach: true
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
featureGates:
  NodeOutOfServiceVolumeDetach: true
---
